{
	"name": "dfDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dfAdmissionraw",
						"type": "DatasetReference"
					},
					"name": "dfAdmissionDF"
				},
				{
					"dataset": {
						"referenceName": "DimdateData",
						"type": "DatasetReference"
					},
					"name": "dfDimDate"
				},
				{
					"dataset": {
						"referenceName": "dfLookupData",
						"type": "DatasetReference"
					},
					"name": "dfLKPData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_weekly",
						"type": "DatasetReference"
					},
					"name": "WeeklySink"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_daily",
						"type": "DatasetReference"
					},
					"name": "DailySink"
				}
			],
			"transformations": [
				{
					"name": "SelectRedqCoulmns"
				},
				{
					"name": "SelectReqdfields2"
				},
				{
					"name": "SelectdailyFromWeekly"
				},
				{
					"name": "AggDimDate"
				},
				{
					"name": "JoinWithDimDate"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "Pivotweekly"
				},
				{
					"name": "PivotDaily"
				},
				{
					"name": "SortWeekly"
				},
				{
					"name": "SortDaily"
				},
				{
					"name": "SelectWeeklySink"
				},
				{
					"name": "SelectDailySink"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dfAdmissionDF\nsource(output(\n\t\tdate_key as string,\n\t\tdate as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tday as string,\n\t\tday_name as string,\n\t\tday_of_year as string,\n\t\tweek_of_month as string,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as string,\n\t\tyear_week as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dfDimDate\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dfLKPData\ndfAdmissionDF select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRedqCoulmns\nLookup1 select(mapColumn(\n\t\tcountry = SelectRedqCoulmns@country,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tcountry = dfLKPData@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tcontinent,\n\t\tpopulation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectReqdfields2\nSelectReqdfields2 split((indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\") && not(isNull(value)),\n\tdisjoint: false) ~> SelectdailyFromWeekly@(Weekly, Daily)\ndfDimDate aggregate(groupBy(ecdcYearWeek = year+\"-W\"+lpad(week_of_year,2,'0')),\n\tWeek_Start_Date = min(date),\n\t\tWeek_End_Date = max(date)) ~> AggDimDate\nSelectdailyFromWeekly@Weekly, AggDimDate join(reported_year_week == ecdcYearWeek,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinWithDimDate\nSelectRedqCoulmns, dfLKPData lookup(SelectRedqCoulmns@country == dfLKPData@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nJoinWithDimDate pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\tsource,\n\t\tWeek_Start_Date,\n\t\tWeek_End_Date),\n\tpivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$N_$V',\n\tlateral: true) ~> Pivotweekly\nSelectdailyFromWeekly@Daily pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\tsource),\n\tpivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),\n\tcount = sum(value),\n\tcolumnNaming: '$N_$V',\n\tlateral: true) ~> PivotDaily\nPivotweekly sort(desc(reported_year_week, true),\n\tasc(country, true),\n\tpartitionBy('hash', 1)) ~> SortWeekly\nPivotDaily sort(desc(reported_date, true),\n\tasc(country, true),\n\tpartitionBy('hash', 1)) ~> SortDaily\nSortWeekly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\treported_week_start_Date = Week_Start_Date,\n\t\treported_week_end_Date = Week_End_Date,\n\t\t{new_week;y_hospital_admissions} = {count_Weekly new hospital admissions per 100k},\n\t\t{new_week;y_icu_admissions} = {count_Weekly new ICU admissions per 100k},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectWeeklySink\nSortDaily select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\t{new_daily hospital occupancy_count} = {count_Daily hospital occupancy},\n\t\tnew_daily_icu_occupancy_count = {count_Daily ICU occupancy},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDailySink\nSelectWeeklySink sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ds_admissions_weekly.csv'],\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tpartitionBy('hash', 1)) ~> WeeklySink\nSelectDailySink sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ds_admissions_daily.csv'],\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DailySink"
		}
	}
}